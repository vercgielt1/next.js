import Head from "next/head";
import { useEffect, useState } from "react";
import { listFiles } from "@/utils/imagekit";
import Masonry from "react-responsive-masonry";
import { FilterType, SortDirectionType, SortType } from "@/utils/types";
import { FilterEnum } from "@/utils/enum";
import { FileObject } from "imagekit/dist/libs/interfaces";
import { IKImage, IKVideo } from "imagekitio-next";
import Link from "next/link";
import Logo from "@/components/Icons/Logo";
import SortDropdown from "@/components/SortDropdown";
import { GetServerSideProps } from "next";

export default function Home({
  allFiles = [],
  images = [],
  videos = [],
  sort,
  sortDirection,
}: {
  allFiles: FileObject[];
  images: FileObject[];
  videos: FileObject[];
  sort?: SortType;
  sortDirection?: SortDirectionType;
}) {
  const [filterState, setFileterState] = useState<FilterType>(FilterEnum.ALL);
  const [files, setFiles] = useState<FileObject[]>(allFiles);
  console.log({ allFiles, images, videos, sort });
  useEffect(() => {
    switch (filterState) {
      case FilterEnum.ALL:
        setFiles(allFiles);
        break;
      case FilterEnum.PHOTOS:
        setFiles(images);
        break;
      default:
        setFiles(videos);
        break;
    }
  }, [filterState, allFiles, images, videos]);

  return (
    <>
      <Head>
        <title>ImageKit image and video gallery</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="flex flex-col items-center px-20 pb-20 pt-0">
        <div className="mt-10 flex flex-col gap-10 max-w-[1230px] w-full">
          <div
            style={{ display: "flex", flexDirection: "column", gap: "1rem" }}
          >
            <p className="text-white/75 text-[1.5rem]">Media Gallery</p>
            <div className="flex gap-[1rem] items-center">
              <p className="text-white/75 text-[0.8rem]">PoweredBy</p> <Logo />
            </div>
            <div>
              <p className="text-white/75">
                This example demonstrates how to build an image and video
                gallery using Next.js, ImageKit, and Tailwind CSS.
              </p>
              <p className="text-white/75">
                You can explore this code for this example on
                <Link
                  href="https://github.com/vercel/next.js/blob/canary/examples/with-imagekit"
                  className="text-blue-500 hover:text-blue-700 ml-[5px]"
                >
                  Github
                </Link>
                .
              </p>
            </div>
          </div>

          <div className="flex justify-between">
            <div className="flex gap-4 items-center">
              <button
                className="border-none bg-black cursor-pointer text-base"
                onClick={() => setFileterState(FilterEnum.ALL)}
                style={
                  filterState === FilterEnum.ALL
                    ? { color: "#fff" }
                    : { color: "#a0a0a0" }
                }
              >
                All
              </button>
              <hr className="h-4 m-0 border-0 border-l border-l-[#e1dfe0]" />
              <button
                className="border-none bg-black cursor-pointer text-base"
                onClick={() => setFileterState(FilterEnum.PHOTOS)}
                style={
                  filterState === FilterEnum.PHOTOS
                    ? { color: "#fff" }
                    : { color: "#a0a0a0" }
                }
              >
                Photos
              </button>
              <hr className="h-4 m-0 border-0 border-l border-l-[#e1dfe0]" />
              <button
                className="border-none bg-black cursor-pointer text-base"
                onClick={() => setFileterState(FilterEnum.VIDEOS)}
                style={
                  filterState === FilterEnum.VIDEOS
                    ? { color: "#fff" }
                    : { color: "#a0a0a0" }
                }
              >
                Videos
              </button>
            </div>
            <div>
              <SortDropdown
                sortParam={sort}
                sortDirectionParam={sortDirection}
              />
            </div>
          </div>

          {files.length ? (
            <Masonry columnsCount={4} gutter="10px">
              {files.map((data, i) => (
                <Link
                  key={data.fileId}
                  href={`/asset/${data.fileId}`}
                  shallow
                  className="masonry-item rounded-lg overflow-hidden"
                >
                  {data.fileType === "image" ? (
                    <IKImage
                      urlEndpoint={process.env.NEXT_PUBLIC_URL_ENDPOINT}
                      src={data.url}
                      width={300}
                      height={(300 * data.height) / data.width}
                      alt="test"
                      lqip={{ active: true }}
                      loading="lazy"
                    />
                  ) : (
                    <IKVideo
                      key={i}
                      urlEndpoint={process.env.NEXT_PUBLIC_URL_ENDPOINT}
                      src={data.url}
                      width={300}
                    />
                  )}
                </Link>
              ))}
            </Masonry>
          ) : (
            <></>
          )}
          <div className="flex justify-center">
            <p className="text-white/75 text-[0.9rem]">
              Built with{" "}
              <Link
                href="https://nextjs.org/"
                className="text-blue-500 hover:text-blue-700 ml-[3px]"
              >
                Next.js
              </Link>
              ,{" "}
              <Link
                href="https://vercel.com/"
                className="text-blue-500 hover:text-blue-700 ml-[3px]"
              >
                Vercel
              </Link>
              , and{" "}
              <Link
                href="https://imagekit.io/"
                className="text-blue-500 hover:text-blue-700 ml-[3px]"
              >
                ImageKit
              </Link>
              .
            </p>
          </div>
        </div>
      </div>
    </>
  );
}

export const getServerSideProps: GetServerSideProps = async (context) => {
  const query = context.query;
  const allFiles = await listFiles(
    100,
    0,
    FilterEnum.ALL,
    query.sort,
    query.sortDirection,
  );
  const images = allFiles.filter((data) => data.fileType === "image");
  const videos = allFiles.filter((data) => data.fileType !== "image");
  return {
    props: {
      allFiles,
      images,
      videos,
      sort: query?.sort || null,
      sortDirection: query?.sortDirection || null,
    },
  };
};
